//code written by Yunus Emre Vurgun of OPCTurkey


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function loadingScreenFunction() {
  inner1();
  setTimeout(inner2, 3000);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function inner1() {
  const ghost = document.getElementById("ghostDiv");
  ghost.innerHTML='<img src="opc-asp-logo.png" style="display: flex; margin:auto;animation-name: loadingAni; animation-duration: 3s;">';
  everything.style.display="none";
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function inner2() {
  const ghost = document.getElementById("ghostDiv");
  ghost.innerHTML='';
  everything.style.display=null;
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

window.onload=function() {
  loadingScreenFunction(); function eer()
  {bootbox.alert('<div style="font-size:20px;">Welcome to OPCTurkey\'s KepServerEX API client.'+
  ' Before you start, make sure you are using an up-to-date browser. '+
  'This program may need a CORS Unblocker to connect properly. If you are '+
  'using Chrome, you can find a CORS Unblocker extention in store. If you already '+
  'activated or modified the CORS settings on the KepServer side, ignore this warning.'+
  '</div><center><img style="width:20%;" src="cors1.png"></center>'); }
  setTimeout(eer, 3000) };

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var savedIP;
var response1Globalized;
let noOfTags;
let finalNoOfTgs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function CntBtnFunc() {
  var serverIP = document.getElementById('IPInput').value;
  let h = new Headers();
  h.append('Accept','application/json');
  xhrRequest= new XMLHttpRequest();
  xhrRequest.open('GET', serverIP);
  xhrRequest.responseType = 'json';
  xhrRequest.send();
  xhrRequest.onload = function() { document.getElementById('status').innerHTML='&nbsp;&nbsp;&nbsp; <b>Connected</b>';
  document.getElementById('status').style.color='green'; console.log('connected successfully'); document.getElementById('div4').style.display='';                                   var response1 = xhrRequest.response;
  response1Globalized  =  response1;
  console.log('read data when connected: ');
  response1GlobalTrue=response1;
  console.log(response1GlobalTrue);
  var gotRespond = xhrRequest.response;
  let noOfTags = gotRespond.browseResults.length;
  finalNoOfTgs = noOfTags;
   };
  xhrRequest.onerror=function(){document.getElementById('status').innerHTML='&nbsp;&nbsp;&nbsp; <b>Attempt Failed</b>';
  document.getElementById('status').style.color='red';};
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function saveIP() {
  savedIP = document.getElementById('IPOnlyInput').value;
  bootbox.alert('<div style="font-size:25px;">'+'<b>'+savedIP+'</b>'+' has been saved as your IP'+'</div>');
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function tagListFunction() {
  var xmlhttp = new XMLHttpRequest();
  var urlPre = document.getElementById('IPInput').value;
  var url = urlPre;
  xmlhttp.onreadystatechange = function() {
  if (this.readyState == 4 && this.status == 200) {
  let allart = JSON.parse(this.responseText);
  let ids = allart.browseResults.map(item => item.id).join('<br/>');
  tagList=ids;}};
  xmlhttp.open("GET", url, true);
  xmlhttp.send();}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function showRetrievedJSON() {
  tagListFunction();
  response1GlobalTrueStringified = JSON.stringify(response1Globalized);
  bootbox.alert('<h3>Retrieved JSON:</h3><br /><div style="font-size:12px;">'+
  response1GlobalTrueStringified +'</div><hr style="color:green;border: 1px solid green; border-radius: 6px;">'+
  '<h3>Tag Count &amp; Tag List:</h3><br /><p style="color:blue;"><b>The Number of Tags The Response Returned: '
  +finalNoOfTgs+'</b></p><br><hr><p>'+tagList+'</p>');
  response1GlobalTrueStringified = response1GlobalTrueStringified;
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


function readTagBtnFunc() {var checkbox = document.getElementById("checker");
  var tagName = document.getElementById('tagInput').value;
  if(tagName.length<1 && checkbox.checked == false) {   bootbox.alert('Tag name can NOT be empty'); return;  }
  if(document.getElementById('status').innerHTML != '&nbsp;&nbsp;&nbsp; <b>Connected</b>' && checkbox.checked == false) {
  bootbox.alert('Please first connect to an API service.'); return;  }
  var userGivesTag =  document.getElementById('tagInput').value  ;
  if(JSON.stringify(response1GlobalTrue).includes('"'+'id'+'"'+':'+'"'+userGivesTag+'"')) {
  savedIP = savedIP;
  var newURL = 'http://'+savedIP+'/iotgateway/read?ids='+userGivesTag;
  let h = new Headers();
  h.append('Accept','application/json');
  xhrRequest= new XMLHttpRequest();
  xhrRequest.open('GET', newURL);
  xhrRequest.responseType = 'json';
  xhrRequest.send();
  xhrRequest.onload = function() {
  var response = xhrRequest.response;
  var resultX = JSON.stringify(response);
  console.log(resultX);
  var valueStartPointDetect = resultX.search('"v":');
  var valueStartApply = resultX.substring(valueStartPointDetect, valueStartPointDetect+11);
  document.getElementById('readDataOutput').innerHTML =valueStartApply;
  setTimeout(gotContentNowChangeIt, 0.0001);
  }
  xhrRequest.onerror= function(){if(checkbox.checked == false) {bootbox.alert('Connection error detected. Please try again.')};}
  return; }
  else {   if( checkbox.checked == false){ bootbox.alert('Tag not found in retrieved JSON data')};}
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function gotContentNowChangeIt() {
  var parsePre = document.getElementById('readDataOutput').value;
  var match = parsePre.match(/\d+/g);
  document.getElementById('readDataOutput').innerHTML ='Tag Value is: '+match;
  if( document.getElementById('readDataOutput').value.includes(",1") ) {
  document.getElementById('readDataOutput').innerHTML ='Tag Value is: '+match;
  bootbox.alert('<h2>(do not mind the number after comma)</h2>');
  }
  else {
  document.getElementById('readDataOutput').innerHTML ='Tag Value is: '+match;
  }}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function displayTagIDBtnFunc() {
  tagListFunction();
  document.getElementById('readIDsorValueDataOutput').innerHTML ='click the button below';
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function WriteTagBtnFunc() {
  var xhrRequest = new XMLHttpRequest();
  var name = 'http://'+savedIP+'/iotgateway';
  var input = document.getElementById('tagWriteInput');
  var tagID = input.value;
  var input2 = document.getElementById('WriteDatainput');
  var value = input2.value;
  xhrRequest.open("POST",name+"/write", true);
  xhrRequest.setRequestHeader("Content-Type","application/json");
  xhrRequest.send("[{\"id\": " + "\"" + tagID + "\"" + "," + "\"v\": \"" + value +  "\"}]");
  xhrRequest.onload= function(){ bootbox.alert('Written Successfully!');}
  xhrRequest.onerror= function(){ bootbox.alert('Connection error detected while writing. Please try again.');}
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function popTagBtnFunc() {
  var inner = document.getElementById('readDataOutput').value;
  if(document.getElementById('readDataOutput').value.length>0) {
  bootbox.alert('<div style="font-size:20px;">'+inner+'</div>');
  }
  else {
  bootbox.alert('there is no value to be shown as alert');
  }}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function manualPOP() {
  bootbox.alert('<div style="font-size:20px;"><b>How to Use:</b><br /><br /> '+
  ' <b>1.</b> Type in your desired IP address into the "IP for Server" box and click on the "Save" button.'+
  ' The IP address must be the same as the one in the complete URL.<br /><br /><b> 2.</b> Paste in the complete URL of '+
  'the server you wish to connect to, into its dedicated input field and press on  the "Connect" button. <br /><br /><b>3.</b>'+
  ' The "Connection Status" text and it\'s color will automatically update itself depending on your current connection. '+
  'You may double click on the "Show Retrieved JSON" button in order to view the JSON response. <br /><br /><b>4.</b> In order '+
  'to read data from a tag, type in the tag name into the field dedicated to it and press on the button where it says "Read Tag".'+
  ' Read data will be shown in it\'s dedicated output box.<br /> <br /><b>5.</b> In order to write a value to a spesific tag name, you '+
  'must write the tag name into the dedicated input field and the desired values into the following box. Press on "WRITE TO TAG"'+
  ' to activate the function.<br /><br /><b> 6.</b> In case of an error message, check '+
  'the console of your browser for detailed error information.<br /><br /><b> 7.</b> If you would '+
  'like to automatically refresh the API connection, click on the "Auto Refresh Data" checkbox on the top right '+
  'corner of the page. Click on it once more to deactivate the feature. Only activate this feature if you\'ve already '+
  'filled in the "Read Tag ID" input field.</div>');
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function showasPopTgsNames() {
  bootbox.alert(tagList);
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function autoChecked() {
  var checkbox = document.getElementById("checker");
  if(checkbox.checked == true) {
  //disable warning
  //auto refresh connection every 2 seconds
  setTimeAutomate();
  bootbox.alert('<p style="font-size:25px;color:green;">auto refresh activated</p>');
  }
  function setTimeAutomate() {
  if(checkbox.checked == true) {
  CntBtnFunc();
  readTagBtnFunc();
  setTimeout(setTimeAutomate, 2000);
  }}
  if(checkbox.checked == false) {
  console.log("listening to auto refresh status: not active confirmed.");
  bootbox.alert('<p style="font-size:25px;color:red;">auto refresh deactivated</p>');
  }}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//code written by Yunus Emre Vurgun of OPCTurkey

